
==================== FINAL INTERFACE ====================
2018-07-20 18:06:37.750499 UTC

interface bytestring-trie-0.3.0.3-HLFcIfm9b5G6WckdLkDVsX:Data.Trie.ArrayMapped.UnsafeST 8001
  interface hash: cc57ea3e370ccb1f102c1f3351958329
  ABI hash: f126d9b9b2c27bae67c0e84b0e3ee490
  export-list hash: ae920181af22979f0d431e30d688499e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: b08d8664e01305aaf909273ac3fff434
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Trie.ArrayMapped.UnsafeST.runST
module dependencies:
package dependencies: base-4.9.0.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:GHC.ST 27b52e9f9ef817e2a3a4182e8c143d4d
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
2f0ef1645cff733a54f63f3a67741b6d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Trie.ArrayMapped.UnsafeST.$trModule2
                   Data.Trie.ArrayMapped.UnsafeST.$trModule1) -}
e7f59e616c3a57653ea5f074f996c2b4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Data.Trie.ArrayMapped.UnsafeST"#) -}
2565ff8f9db9095bcd2686e1a3bb490c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "bytestring-trie-0.3.0.3-HLFcIfm9b5G6WckdLkDVsX"#) -}
bfaf641b450d7913add9cf57af049bde
  runST :: (forall s. GHC.ST.ST s a) -> a
  {- Arity: 1, HasNoCafRefs, Strictness: <C(S(LS)),1*C1(U(A,1*U))>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, True)
                Data.Trie.ArrayMapped.UnsafeST.runSTRep
                  `cast`
                (forall (a :: <*>_N).
                 (forall (s :: <*>_N).
                  Sym (GHC.ST.N:ST[0] <s `cast` <*>_N>_N <a>_R))
                 ->_R <a>_R) -}
07fd1d65e23d4e8d91baa1a332ee325c
  runSTRep :: (forall s. GHC.ST.STRep s a) -> a
  {- Arity: 1, HasNoCafRefs, Strictness: <C(S(LS)),1*C1(U(A,1*U))>,
     Inline: INLINE[0] (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a (st_rep :: forall s. GHC.ST.STRep s a) ->
                 case st_rep
                        @ GHC.Prim.RealWorld
                        GHC.Prim.realWorld# of ds { (#,#) ipv ipv1 ->
                 ipv1 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

