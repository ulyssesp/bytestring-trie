
==================== FINAL INTERFACE ====================
2018-07-20 18:09:26.8343579 UTC

interface bytestring-trie-0.3.0.3-HLFcIfm9b5G6WckdLkDVsX:Data.Trie.BigEndianPatricia.Convenience 8001
  interface hash: c385c9c06a1fbf0847e367b8aa8ec1f9
  ABI hash: 4ce105fad85bdf826fb7ecf4c8548632
  export-list hash: c50495417e82d8882f83873e9552261c
  orphan hash: 68cbddf20193976dae2b34f542cd1d7f
  flag hash: ba1b8eda2355b7757efa3c3cd09f6e96
  sig of: Nothing
  used TH splices: False
  where
exports:
  Data.Trie.BigEndianPatricia.Convenience.adjustWithKey
  Data.Trie.BigEndianPatricia.Convenience.disunion
  Data.Trie.BigEndianPatricia.Convenience.fromListL
  Data.Trie.BigEndianPatricia.Convenience.fromListR
  Data.Trie.BigEndianPatricia.Convenience.fromListS
  Data.Trie.BigEndianPatricia.Convenience.fromListWith
  Data.Trie.BigEndianPatricia.Convenience.fromListWith'
  Data.Trie.BigEndianPatricia.Convenience.fromListWithL
  Data.Trie.BigEndianPatricia.Convenience.fromListWithL'
  Data.Trie.BigEndianPatricia.Convenience.insertIfAbsent
  Data.Trie.BigEndianPatricia.Convenience.insertWith
  Data.Trie.BigEndianPatricia.Convenience.insertWith'
  Data.Trie.BigEndianPatricia.Convenience.insertWithKey
  Data.Trie.BigEndianPatricia.Convenience.insertWithKey'
  Data.Trie.BigEndianPatricia.Convenience.lookupWithDefault
  Data.Trie.BigEndianPatricia.Convenience.unionWith
  Data.Trie.BigEndianPatricia.Convenience.unionWith'
  Data.Trie.BigEndianPatricia.Convenience.update
  Data.Trie.BigEndianPatricia.Convenience.updateWithKey
module dependencies: Data.Trie.BigEndianPatricia.Base
                     Data.Trie.BigEndianPatricia.BitTwiddle
                     Data.Trie.BigEndianPatricia.Errors
                     Data.Trie.BigEndianPatricia.Internal Data.Trie.ByteStringInternal
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.0.0:Data.Foldable 3cbed01c922be29649c33015287c82ca
import  -/  base-4.9.0.0:Data.List d711f98b49ef5d33e5b3d404631ed073
import  -/  base-4.9.0.0:Data.OldList 3c899c6d8e6204063769214449ac0954
import  -/  base-4.9.0.0:Data.Ord f0d073170d91d9483c5cc4a834e93dcf
import  -/  base-4.9.0.0:Data.Tuple 84c2bcc75b7a239341ae2f88cce9d8d7
import  -/  base-4.9.0.0:GHC.Base dd8044a8d640eee51828c17c476a6ba7
import  -/  base-4.9.0.0:Prelude 2d9cd8b0ec3d728f62b734df888d2e34
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString 94d879de7c0c4c728d40df2175a8ec14
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Internal c4a5d5c11e9c7b86fbb578dc42b94086
import  -/  Data.Trie.BigEndianPatricia.Base 2252f5f1b5079bd92c5ebf823d2e3ff2
  exports: c37b9b29a5ca940095451a0dd06cbfa6
  fromList ca8cef4457639af5a7cc508ddb9a042f
import  -/  Data.Trie.BigEndianPatricia.Errors 97f76d49114e46c8aeca84cd65c1ecad
  exports: 88301d29bfffdea8efa2041d99045397
  impossible a2ca56abcbb57b8fb2d6fe7741c5d76a
import  -/  Data.Trie.BigEndianPatricia.Internal f59b3bce4a1944305edd233cbf1f02b7
  exports: 4b0053b84e77b5caaee3c9f9de90fe29
  Trie a9cdd0b44d88c10f0755fad281dbeb54
  adjustBy a093594aa7963620862cf753e8e384ba
  alterBy cdef4ea33b31c9ec91ade277fd67181e
  empty e863dc1f9e20e69577cf90d86008ae34
  lookupBy_ 45c240b0eaf31a2b8f585adec851ee1d
  mergeBy a9cdd0b44d88c10f0755fad281dbeb54
0863fb29f9fef1450ad9f3055de08d40
  $scomparing ::
    (b -> Data.ByteString.Internal.ByteString)
    -> b -> b -> GHC.Types.Ordering
  {- Arity: 3, HasNoCafRefs,
     Strictness: <C(S(SLSS)),C(U(U,U,U,U))><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ b
                   (p :: b -> Data.ByteString.Internal.ByteString)
                   (x :: b)
                   (y :: b) ->
                 Data.ByteString.Internal.compareBytes (p x) (p y)) -}
1b17f8f93e1cebea89ac84b9b7417c87
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Data.Trie.BigEndianPatricia.Convenience.$trModule2
                   Data.Trie.BigEndianPatricia.Convenience.$trModule1) -}
d75ffdb979b21a6141c35d1cad76d69f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Data.Trie.BigEndianPatricia.Convenience"#) -}
138df6bc6848c9ac01ff67c2ea7e8351
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "bytestring-trie-0.3.0.3-HLFcIfm9b5G6WckdLkDVsX"#) -}
f824f4ff198a87ab62c834da5ae22530
  $wadjustWithKey ::
    (Data.ByteString.Internal.ByteString -> a -> a)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 5, Strictness: <L,1*C1(U)><S,U><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> a)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 Data.Trie.BigEndianPatricia.Internal.$wadjustBy
                   @ a
                   (\ (k :: Data.ByteString.Internal.ByteString)[OneShot]
                      (ds :: a)[OneShot] ->
                    w k)
                   ww
                   ww1
                   ww2
                   ww3
                   (Data.Trie.BigEndianPatricia.Convenience.adjustWithKey1 @ a)) -}
542877ea4850629bf6e7cc4e36540bc8
  $winsertIfAbsent ::
    GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 5, Strictness: <S,U><L,U><S,U><S,U><L,U>, Inline: [0],
     Unfolding: (\ @ a
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w :: a) ->
                 Data.Trie.BigEndianPatricia.Internal.$walterBy_
                   @ a
                   (Data.Trie.BigEndianPatricia.Convenience.insertIfAbsent1 @ a)
                   ww
                   ww1
                   ww2
                   ww3
                   w) -}
78be8581f27b27450691759b992f3e01
  $winsertWith ::
    (a -> a -> a)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 6, Strictness: <L,C(C1(U))><S,U><L,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: a -> a -> a)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w1 :: a) ->
                 Data.Trie.BigEndianPatricia.Internal.$walterBy_
                   @ a
                   (\ (k :: Data.ByteString.Internal.ByteString)[OneShot]
                      (v :: a)[OneShot]
                      (mv :: GHC.Base.Maybe a)
                      (t :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                    (case mv of wild {
                       GHC.Base.Nothing -> GHC.Base.Just @ a v
                       GHC.Base.Just v1 -> GHC.Base.Just @ a (w v v1) },
                     t))
                   ww
                   ww1
                   ww2
                   ww3
                   w1) -}
d3f14dc11b71bab346851810e8360fbf
  $winsertWith' ::
    (a -> a -> a)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 6, Strictness: <L,C(C1(U))><S,U><L,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: a -> a -> a)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w1 :: a) ->
                 Data.Trie.BigEndianPatricia.Internal.$walterBy_
                   @ a
                   (\ (k :: Data.ByteString.Internal.ByteString)[OneShot]
                      (v :: a)[OneShot]
                      (mv :: GHC.Base.Maybe a)
                      (t :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                    (case mv of wild {
                       GHC.Base.Nothing -> GHC.Base.Just @ a v
                       GHC.Base.Just v1
                       -> case w v v1 of x1 { DEFAULT -> GHC.Base.Just @ a x1 } },
                     t))
                   ww
                   ww1
                   ww2
                   ww3
                   w1) -}
f3bf16b1051f1c998580cd42627c494a
  $winsertWithKey ::
    (Data.ByteString.Internal.ByteString -> a -> a -> a)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><S,U><L,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> a -> a)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w1 :: a) ->
                 Data.Trie.BigEndianPatricia.Internal.$walterBy_
                   @ a
                   (\ (k :: Data.ByteString.Internal.ByteString)[OneShot]
                      (v :: a)[OneShot]
                      (mv :: GHC.Base.Maybe a)
                      (t :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                    (case mv of wild {
                       GHC.Base.Nothing -> GHC.Base.Just @ a v
                       GHC.Base.Just v1 -> GHC.Base.Just @ a (w k v v1) },
                     t))
                   ww
                   ww1
                   ww2
                   ww3
                   w1) -}
cc9ae87c525bc3e894ca879ecded6f31
  $winsertWithKey' ::
    (Data.ByteString.Internal.ByteString -> a -> a -> a)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 6, Strictness: <L,C(C1(C1(U)))><S,U><L,U><S,U><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> a -> a)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#)
                   (w1 :: a) ->
                 Data.Trie.BigEndianPatricia.Internal.$walterBy_
                   @ a
                   (\ (k :: Data.ByteString.Internal.ByteString)[OneShot]
                      (v :: a)[OneShot]
                      (mv :: GHC.Base.Maybe a)
                      (t :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                    (case mv of wild {
                       GHC.Base.Nothing -> GHC.Base.Just @ a v
                       GHC.Base.Just v1
                       -> case w k v v1 of x1 { DEFAULT -> GHC.Base.Just @ a x1 } },
                     t))
                   ww
                   ww1
                   ww2
                   ww3
                   w1) -}
a62040e1f07e45513b98fd88f7ebb258
  $wupdate ::
    (a -> GHC.Base.Maybe a)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 5, Strictness: <L,C(U)><S,U><L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ @ a
                   (w :: a -> GHC.Base.Maybe a)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 Data.Trie.BigEndianPatricia.Internal.$walterBy_
                   @ a
                   (\ (k :: Data.ByteString.Internal.ByteString)[OneShot]
                      (v :: a)[OneShot]
                      (mv :: GHC.Base.Maybe a)
                      (t :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                    (GHC.Base.$fMonadMaybe_$c>>= @ a @ a mv w, t))
                   ww
                   ww1
                   ww2
                   ww3
                   (Data.Trie.BigEndianPatricia.Convenience.update1 @ a)) -}
4364032826a2a6ec2179b26085a64fa2
  $wupdateWithKey ::
    (Data.ByteString.Internal.ByteString -> a -> GHC.Base.Maybe a)
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 5, Strictness: <L,C(C1(U))><S,U><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> GHC.Base.Maybe a)
                   (ww :: GHC.Prim.Addr#)
                   (ww1 :: GHC.ForeignPtr.ForeignPtrContents)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: GHC.Prim.Int#) ->
                 Data.Trie.BigEndianPatricia.Internal.$walterBy_
                   @ a
                   (\ (k :: Data.ByteString.Internal.ByteString)[OneShot]
                      (v :: a)[OneShot]
                      (mv :: GHC.Base.Maybe a)
                      (t :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                    (case mv of wild {
                       GHC.Base.Nothing -> GHC.Base.Nothing @ a
                       GHC.Base.Just x -> w k x },
                     t))
                   ww
                   ww1
                   ww2
                   ww3
                   (Data.Trie.BigEndianPatricia.Convenience.updateWithKey1 @ a)) -}
2f6ad2d96b62de98b6a12f7c6d3eadbc
  adjustWithKey ::
    (Data.ByteString.Internal.ByteString -> a -> a)
    -> Data.ByteString.Internal.ByteString
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <L,1*C1(U)><S(SLSS),1*U(U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> a)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$wadjustWithKey
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
ca2c1358708ac96d83f89c9f8d3235e1
  adjustWithKey1 :: a
  {- Strictness: x -}
880ee87350e33bcab2afc6ca0e1f1c67
  disunion ::
    Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2,
     Unfolding: (\ @ a ->
                 Data.Trie.BigEndianPatricia.Internal.mergeBy
                   @ a
                   (Data.Trie.BigEndianPatricia.Convenience.disunion1 @ a)) -}
2ed406ee4be3519a3ea9639b279d3b1f
  disunion1 :: a -> a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ a (ds :: a) (ds1 :: a) -> GHC.Base.Nothing @ a) -}
f48a5ce68c82d399cf7b28cb38cc61cd
  fromListL ::
    [(Data.ByteString.Internal.ByteString, a)]
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 1, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ a ->
                 GHC.List.foldl'
                   @ (Data.ByteString.Internal.ByteString, a)
                   @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.ByteString.Internal.ByteString
                         -> a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> (Data.ByteString.Internal.ByteString, a)
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      (\ (x :: Data.ByteString.Internal.ByteString
                               -> a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (eta :: Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (eta1 :: (Data.ByteString.Internal.ByteString, a)) ->
                       GHC.Base.flip
                         @ (Data.ByteString.Internal.ByteString, a)
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (Data.Tuple.uncurry
                            @ Data.ByteString.Internal.ByteString
                            @ a
                            @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                            x)
                         eta
                         eta1)
                      (Data.Trie.BigEndianPatricia.Convenience.insertIfAbsent @ a))
                   (Data.Trie.BigEndianPatricia.Internal.Empty @ a)) -}
ec8c4ba8baa5d56dc69cbd59f2509d8c
  fromListR ::
    [(Data.ByteString.Internal.ByteString, a)]
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Data.Trie.BigEndianPatricia.Base.fromList -}
4d9be285244040f1d2546dbd314b309d
  fromListS ::
    [(Data.ByteString.Internal.ByteString, a)]
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 1, Strictness: <S,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, False)
                (\ @ a ->
                 let {
                   g :: (Data.ByteString.Internal.ByteString, a)
                        -> (Data.ByteString.Internal.ByteString, a) -> GHC.Types.Ordering
                     {- Arity: 2 -}
                   = Data.Trie.BigEndianPatricia.Convenience.$scomparing
                       @ (Data.ByteString.Internal.ByteString, a)
                       (Data.Tuple.fst @ Data.ByteString.Internal.ByteString @ a)
                 } in
                 \ (x :: [(Data.ByteString.Internal.ByteString, a)]) ->
                 GHC.Base.foldr
                   @ (Data.ByteString.Internal.ByteString, a)
                   @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (Data.Tuple.uncurry
                      @ Data.ByteString.Internal.ByteString
                      @ a
                      @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      (Data.Trie.BigEndianPatricia.Base.insert @ a))
                   (Data.Trie.BigEndianPatricia.Internal.Empty @ a)
                   (Data.OldList.sortBy
                      @ (Data.ByteString.Internal.ByteString, a)
                      g
                      x)) -}
2a4a8753418c89927ed6e2dc4876d765
  fromListWith ::
    (a -> a -> a)
    -> [(Data.ByteString.Internal.ByteString, a)]
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a (f :: a -> a -> a) ->
                 GHC.Base.foldr
                   @ (Data.ByteString.Internal.ByteString, a)
                   @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.ByteString.Internal.ByteString
                         -> a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      @ ((Data.ByteString.Internal.ByteString, a)
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      (Data.Tuple.uncurry
                         @ Data.ByteString.Internal.ByteString
                         @ a
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                            -> Data.Trie.BigEndianPatricia.Internal.Trie a))
                      (Data.Trie.BigEndianPatricia.Internal.alterBy
                         @ a
                         (\ (ds :: Data.ByteString.Internal.ByteString)
                            (v :: a)
                            (ds1 :: GHC.Base.Maybe a) ->
                          case ds1 of wild {
                            GHC.Base.Nothing -> GHC.Base.Just @ a v
                            GHC.Base.Just w -> GHC.Base.Just @ a (f v w) })))
                   (Data.Trie.BigEndianPatricia.Internal.Empty @ a)) -}
09f7df93bedaafff5df6d1e21f423bb2
  fromListWith' ::
    (a -> a -> a)
    -> [(Data.ByteString.Internal.ByteString, a)]
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a (f :: a -> a -> a) ->
                 GHC.Base.foldr
                   @ (Data.ByteString.Internal.ByteString, a)
                   @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.ByteString.Internal.ByteString
                         -> a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      @ ((Data.ByteString.Internal.ByteString, a)
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      (Data.Tuple.uncurry
                         @ Data.ByteString.Internal.ByteString
                         @ a
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                            -> Data.Trie.BigEndianPatricia.Internal.Trie a))
                      (Data.Trie.BigEndianPatricia.Internal.alterBy
                         @ a
                         (\ (ds :: Data.ByteString.Internal.ByteString)
                            (v :: a)
                            (ds1 :: GHC.Base.Maybe a) ->
                          case ds1 of wild {
                            GHC.Base.Nothing -> GHC.Base.Just @ a v
                            GHC.Base.Just w
                            -> GHC.Base.$!
                                 @ a
                                 @ (GHC.Base.Maybe a)
                                 (GHC.Base.Just @ a)
                                 (f v w) })))
                   (Data.Trie.BigEndianPatricia.Internal.Empty @ a)) -}
1e55f349798d28de8deb608f2d67a5be
  fromListWithL ::
    (a -> a -> a)
    -> [(Data.ByteString.Internal.ByteString, a)]
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a (f :: a -> a -> a) ->
                 GHC.List.foldl'
                   @ (Data.ByteString.Internal.ByteString, a)
                   @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.ByteString.Internal.ByteString
                         -> a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> (Data.ByteString.Internal.ByteString, a)
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      (\ (x :: Data.ByteString.Internal.ByteString
                               -> a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (eta :: Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (eta1 :: (Data.ByteString.Internal.ByteString, a)) ->
                       GHC.Base.flip
                         @ (Data.ByteString.Internal.ByteString, a)
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (Data.Tuple.uncurry
                            @ Data.ByteString.Internal.ByteString
                            @ a
                            @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                            x)
                         eta
                         eta1)
                      (Data.Trie.BigEndianPatricia.Internal.alterBy
                         @ a
                         (\ (ds :: Data.ByteString.Internal.ByteString)
                            (v :: a)
                            (ds1 :: GHC.Base.Maybe a) ->
                          case ds1 of wild {
                            GHC.Base.Nothing -> GHC.Base.Just @ a v
                            GHC.Base.Just w -> GHC.Base.Just @ a (f w v) })))
                   (Data.Trie.BigEndianPatricia.Internal.Empty @ a)) -}
ede62318f03f8716ff2faa58fd1b6cb4
  fromListWithL' ::
    (a -> a -> a)
    -> [(Data.ByteString.Internal.ByteString, a)]
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <L,C(C1(U))><S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ a (f :: a -> a -> a) ->
                 GHC.List.foldl'
                   @ (Data.ByteString.Internal.ByteString, a)
                   @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (GHC.Base.$
                      @ 'GHC.Types.PtrRepLifted
                      @ (Data.ByteString.Internal.ByteString
                         -> a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                         -> (Data.ByteString.Internal.ByteString, a)
                         -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                      (\ (x :: Data.ByteString.Internal.ByteString
                               -> a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (eta :: Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (eta1 :: (Data.ByteString.Internal.ByteString, a)) ->
                       GHC.Base.flip
                         @ (Data.ByteString.Internal.ByteString, a)
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                         @ (Data.Trie.BigEndianPatricia.Internal.Trie a)
                         (Data.Tuple.uncurry
                            @ Data.ByteString.Internal.ByteString
                            @ a
                            @ (Data.Trie.BigEndianPatricia.Internal.Trie a
                               -> Data.Trie.BigEndianPatricia.Internal.Trie a)
                            x)
                         eta
                         eta1)
                      (Data.Trie.BigEndianPatricia.Internal.alterBy
                         @ a
                         (\ (ds :: Data.ByteString.Internal.ByteString)
                            (v :: a)
                            (ds1 :: GHC.Base.Maybe a) ->
                          case ds1 of wild {
                            GHC.Base.Nothing -> GHC.Base.Just @ a v
                            GHC.Base.Just w
                            -> GHC.Base.$!
                                 @ a
                                 @ (GHC.Base.Maybe a)
                                 (GHC.Base.Just @ a)
                                 (f w v) })))
                   (Data.Trie.BigEndianPatricia.Internal.Empty @ a)) -}
a21f7262f05b4a683a1341742e1a8162
  insertIfAbsent ::
    Data.ByteString.Internal.ByteString
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <S(SLSS),1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: Data.ByteString.Internal.ByteString) (w1 :: a) ->
                 case w of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$winsertIfAbsent
                   @ a
                   ww1
                   ww2
                   ww3
                   ww4
                   w1 }) -}
ab48593e0128ded30f42861254a70e52
  insertIfAbsent1 ::
    Data.ByteString.Internal.ByteString
    -> a
    -> GHC.Base.Maybe a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> (GHC.Base.Maybe a, Data.Trie.BigEndianPatricia.Internal.Trie a)
  {- Arity: 4, HasNoCafRefs,
     Unfolding: (\ @ a
                   (k :: Data.ByteString.Internal.ByteString)[OneShot]
                   (v :: a)[OneShot]
                   (mv :: GHC.Base.Maybe a)
                   (t :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                 (case mv of wild {
                    GHC.Base.Nothing -> GHC.Base.Just @ a v GHC.Base.Just ds -> wild },
                  t)) -}
3c72e54426b369d8aed0622e7bcac07b
  insertWith ::
    (a -> a -> a)
    -> Data.ByteString.Internal.ByteString
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 3, Strictness: <L,C(C1(U))><S(SLSS),1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: a -> a -> a)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: a) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$winsertWith
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
40ef3ea2214d3222ecba9c8b9b9fef36
  insertWith' ::
    (a -> a -> a)
    -> Data.ByteString.Internal.ByteString
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 3, Strictness: <L,C(C1(U))><S(SLSS),1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: a -> a -> a)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: a) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$winsertWith'
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
1adce96884d441885eb12e5cc1feb2c6
  insertWithKey ::
    (Data.ByteString.Internal.ByteString -> a -> a -> a)
    -> Data.ByteString.Internal.ByteString
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 3,
     Strictness: <L,C(C1(C1(U)))><S(SLSS),1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> a -> a)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: a) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$winsertWithKey
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
39726a45ead50f59805e38bc18e5e29b
  insertWithKey' ::
    (Data.ByteString.Internal.ByteString -> a -> a -> a)
    -> Data.ByteString.Internal.ByteString
    -> a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 3,
     Strictness: <L,C(C1(C1(U)))><S(SLSS),1*U(U,U,U,U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> a -> a)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: a) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$winsertWithKey'
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
d7540d0f3c57610d560643a922a1dec6
  lookupWithDefault ::
    a
    -> Data.ByteString.Internal.ByteString
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> a
  {- Arity: 3, Strictness: <L,U><L,U(U,U,U,U)><S,1*U>,
     Unfolding: (\ @ a
                   (def :: a)
                   (eta :: Data.ByteString.Internal.ByteString)
                   (eta1 :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                 Data.Trie.BigEndianPatricia.Internal.lookupBy_
                   @ a
                   @ a
                   (\ (ds :: GHC.Base.Maybe a)
                      (ds1 :: Data.Trie.BigEndianPatricia.Internal.Trie a)[OneShot] ->
                    case ds of wild { GHC.Base.Nothing -> def GHC.Base.Just v -> v })
                   def
                   (\ (ds :: Data.Trie.BigEndianPatricia.Internal.Trie a) -> def)
                   eta
                   eta1) -}
a2e097b37fb4b791ed47a5ab600ad2d8
  unionWith ::
    (a -> a -> a)
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 3, Strictness: <L,C(C1(U))><S,1*U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (f :: a -> a -> a)
                   (eta :: Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (eta1 :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                 Data.Trie.BigEndianPatricia.Internal.mergeBy
                   @ a
                   (\ (x :: a) (y :: a)[OneShot] -> GHC.Base.Just @ a (f x y))
                   eta
                   eta1) -}
8b8210ebd21eff06c4b690c81a6552c1
  unionWith' ::
    (a -> a -> a)
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 3, Strictness: <L,C(C1(U))><S,1*U><S,U>,
     Unfolding: (\ @ a
                   (f :: a -> a -> a)
                   (eta :: Data.Trie.BigEndianPatricia.Internal.Trie a)
                   (eta1 :: Data.Trie.BigEndianPatricia.Internal.Trie a) ->
                 Data.Trie.BigEndianPatricia.Internal.mergeBy
                   @ a
                   (\ (x :: a) (y :: a)[OneShot] ->
                    case f x y of x1 { DEFAULT -> GHC.Base.Just @ a x1 })
                   eta
                   eta1) -}
665c069ebca1a31159a73cc71dd206ce
  update ::
    (a -> GHC.Base.Maybe a)
    -> Data.ByteString.Internal.ByteString
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <L,C(U)><S(SLSS),1*U(U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: a -> GHC.Base.Maybe a)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$wupdate
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
390f9d4ffa982874d632e1cc9dcbe9bd
  update1 :: a
  {- Strictness: x -}
38f09b84e869076982d7ebf529a2f577
  updateWithKey ::
    (Data.ByteString.Internal.ByteString -> a -> GHC.Base.Maybe a)
    -> Data.ByteString.Internal.ByteString
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
    -> Data.Trie.BigEndianPatricia.Internal.Trie a
  {- Arity: 2, Strictness: <L,C(C1(U))><S(SLSS),1*U(U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: Data.ByteString.Internal.ByteString -> a -> GHC.Base.Maybe a)
                   (w1 :: Data.ByteString.Internal.ByteString) ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Data.Trie.BigEndianPatricia.Convenience.$wupdateWithKey
                   @ a
                   w
                   ww1
                   ww2
                   ww3
                   ww4 }) -}
ad64452c9d37adf76fea9c81639de0cf
  updateWithKey1 :: a
  {- Strictness: x -}
"SPEC/Data.Trie.BigEndianPatricia.Convenience comparing @ ByteString _" [ALWAYS] forall @ b
                                                                                        ($dOrd :: GHC.Classes.Ord
                                                                                                    Data.ByteString.Internal.ByteString)
  Data.Ord.comparing @ Data.ByteString.Internal.ByteString @ b $dOrd
  = Data.Trie.BigEndianPatricia.Convenience.$scomparing @ b
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

